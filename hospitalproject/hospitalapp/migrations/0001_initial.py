# Generated by Django 3.2.8 on 2021-10-22 08:15

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(default=datetime.datetime(2021, 10, 22, 8, 15, 40, 213921, tzinfo=utc))),
                ('end_time', models.TimeField(default=datetime.datetime(2021, 10, 22, 8, 15, 40, 213945, tzinfo=utc))),
                ('patinet_name', models.CharField(blank=True, max_length=50, null=True)),
                ('patient_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('patient_email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('Dental', 'Dental'), ('Cardiology', 'Cardiology'), ('Urology', 'Urology'), ('Plastic Surgery', 'Plastic Surgery'), ('Nerology', 'Nerology')], default='', max_length=264)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=60, verbose_name='email')),
                ('qualification', models.CharField(blank=True, max_length=264, null=True)),
                ('area_of_expertise', models.CharField(blank=True, max_length=264, null=True)),
                ('fees', models.IntegerField(blank=True, null=True)),
                ('book_appointent', models.ManyToManyField(blank=True, default='', null=True, to='hospitalapp.BookAppointment')),
                ('department', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='hospitalapp.department')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('booked', models.BooleanField(default=False)),
                ('slots_available', models.IntegerField(blank=True, default=0, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalapp.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='bookappointment',
            name='mydoctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalapp.doctor'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=6, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
